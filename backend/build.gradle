plugins {
    id 'org.springframework.boot' version '2.7.1'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'jacoco'
}

jar {
    enabled = false
}

group = 'com.moloko'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

bootJar {
    from('../frontend') {
        into 'public'
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb-reactive'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springdoc:springdoc-openapi-webflux-ui:1.6.9'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation 'org.mockito:mockito-core'
    testImplementation 'org.mockito:mockito-inline'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'
}

tasks.named('test') {
    useJUnitPlatform()
}
/*----------------------------------JACOCO CONFIG--------------------------------*/

def excludes = [
        'com/moloko/molokoblogengine/model/**',
        'com/moloko/molokoblogengine/MolokoBlogEngineApplication.*'
]

private excludeJacoco(classDirectories, excludes) {
    classDirectories.setFrom(files(classDirectories.files.collect {
        fileTree(dir: it, exclude: excludes)
    }))
}

jacocoTestReport {
    excludeJacoco(classDirectories, excludes)
}

jacocoTestCoverageVerification {
    excludeJacoco(classDirectories, excludes)
    violationRules {
        rule {
            limit {
                counter = 'LINE'
                minimum = 1.0
            }
        }
    }
}
check.dependsOn jacocoTestCoverageVerification